import static net.grinder.script.Grinder.grinder
import static org.junit.Assert.*
import static org.hamcrest.Matchers.*
import net.grinder.script.GTest
import net.grinder.script.Grinder
import net.grinder.scriptengine.groovy.junit.GrinderRunner
import net.grinder.scriptengine.groovy.junit.annotation.BeforeProcess
import net.grinder.scriptengine.groovy.junit.annotation.BeforeThread
import static net.grinder.util.GrinderUtils.* // You can use this if you're using nGrinder after 3.2.3
import org.junit.Before
import org.junit.BeforeClass
import org.junit.Test
import org.junit.runner.RunWith

import org.ngrinder.http.HTTPRequest
import org.ngrinder.http.HTTPRequestControl
import org.ngrinder.http.HTTPResponse
import org.ngrinder.http.cookie.Cookie
import org.ngrinder.http.cookie.CookieManager

/**
* A simple example using the HTTP plugin that shows the retrieval of a single page via HTTP.
*
* This script is automatically generated by ngrinder.
*
* @author admin
*/
@RunWith(GrinderRunner)
class TestRunner {

	public static GTest test1
	public static GTest test2
	
	public static HTTPRequest request1
	public static HTTPRequest request2

	
	public static Map<String, String> headers = [:]
	public static Map<String, Object> params = [:]
	public static List<Cookie> cookies = []

	@BeforeProcess
	public static void beforeProcess() {
		// HTTPRequestControl.setConnectionTimeout(300000)
    		// Spring boot - IOException
    		HTTPPluginControl.getConnectionDefaults().timeout = 6000
    
		java.lang.System.setProperty("https.protocols", "TLSv1.2")
		java.lang.System.setProperty("jsse.enableSNIExtension", "true")
    
		test1 = new GTest(1, "139.10.73.94")
		test2 = new GTest(2, "139.10.73.68")

		
		request1 = new HTTPRequest()
		request2 = new HTTPRequest()

		
		grinder.logger.info("before process.")
	}

	@BeforeThread
	public void beforeThread() {
		test1.record(this, "test1")
		test2.record(this, "test2")
		
		grinder.statistics.delayReports = true
		grinder.logger.info("before thread.")
	}

	@Before
	public void before() {
		request1.setHeaders(headers)
		request2.setHeaders(headers)

				
		CookieManager.addCookies(cookies)
		grinder.logger.info("before. init headers and cookies")
	}

        @Test
        public void test1() {
                HTTPResponse response1 = request1.GET("http://139.10.73.94/db.jsp", params)

                if (response1.statusCode == 301 || response1.statusCode == 302) {
                        grinder.logger.warn("Warning. The response may not be correct. The response code was {}.", response.statusCode)
                } else {
                        assertThat(response1.statusCode, is(200))
                }
        }

        @Test
        public void test2() {
                HTTPResponse response2 = request2.GET("http://139.10.73.68/db.jsp", params)

                if (response2.statusCode == 301 || response2.statusCode == 302) {
                        grinder.logger.warn("Warning. The response may not be correct. The response code was {}.", response2.statusCode)
                } else {
                        assertThat(response2.statusCode, is(200))
                }
        }
}
